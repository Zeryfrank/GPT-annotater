% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aitag.R
\name{gpt_annotate}
\alias{gpt_annotate}
\title{Annotate a dataframe using OpenAI's GPT models}
\usage{
gpt_annotate(
  dataframe,
  instruction = "",
  temperature = 0,
  api_key = Sys.getenv("openai_key"),
  gpt_model = "gpt-3.5-turbo-0125",
  api_url = Sys.getenv("openai_url")
)
}
\arguments{
\item{dataframe}{A dataframe containing the data to be annotated. It must include columns
named "id" and "text".}

\item{instruction}{A character string containing the instruction for the GPT model to follow
when annotating the text data.}

\item{temperature}{Numeric. The temperature parameter for the GPT model, controlling the
randomness of the generated annotations. Default is 0.}

\item{api_key}{The API key for authenticating with the OpenAI API. By default, this is read
from the "openai_key" environment variable.}

\item{gpt_model}{The name of the GPT model to use for annotation. Default is "gpt-3.5-turbo-0125".}

\item{api_url}{The URL for the OpenAI API endpoint. By default, this is read from the
"openai_url" environment variable.}
}
\value{
This function does not return a value. It saves the GPT responses as RDS files in a
directory named "gptoutput/{dataframe_name}/{id}.rds".
}
\description{
This function sends the text data from a dataframe to OpenAI's GPT API for annotation,
based on a provided instruction. The GPT responses are saved as RDS files.
}
\examples{
\dontrun{
my_data <- data.frame(
id = 1:3,
text = c("Example text 1", "Example text 2", "Example text 3")
)

gpt_annotate(my_data, "Classify the sentiment of this text as positive, negative or neutral.")
}

}
